


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004                 AREA             MyRODataArea, DATA, READONLY, a
lign=3
  120 00000000         
  121 00000000 00000001 
              0000001E 
              00000002 
              00000046 



ARM Macro Assembler    Page 4 


              00000003 
              000000C8 
              00000004 
              0000002A 
              00000005 
              00000051 INGREDIENT_CALORIES
                               DCD              0x01, 30, 0x02, 70, 0x03, 200, 
0x04, 42, 0x05, 81
  122 00000028 00000006 
              00000014         DCD              0x06, 20
  123 00000030 00000002 
              00000032 
              00000005 
              00000003 
              00000003 
              0000000A 
              00000001 
              00000005 
              00000004 INGREDIENT_QUANTITY
                               DCD              0x02, 50, 0x05, 3, 0x03, 10, 0x
01, 5, 0x04
  124 00000054 00000008 
              00000006 
              0000001E         DCD              8, 0x06, 30
  125 00000060 06      NUM_INGREDIENTS
                               DCB              6
  126 00000061         
  127 00000061                 AREA             MyRWDataArea, DATA, READWRITE, 
align=3
  128 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 CALORIES_ORDERED
                               SPACE            6*4
  129 00000018 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 CAL_QUANT
                               SPACE            6*4
  130 00000030         
  131 00000030 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 QUANTITY_ORDERED
                               SPACE            6*4
  132 00000048 00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 QUANT_QUANT
                               SPACE            6*4
  133 00000060         
  134 00000060                 AREA             |.text|, CODE, READONLY, align=
3
  135 00000000         
  136 00000000         
  137 00000000         ; Reset Handler
  138 00000000         
  139 00000000        0 
                       calories
                               RN               0
  140 00000000        1 
                       quantity
                               RN               1
  141 00000000        2 
                       calories_rdr
                               RN               2
  142 00000000        3 
                       cal_quant
                               RN               3
  143 00000000        4 
                       quantity_rdr
                               RN               4
  144 00000000        5 
                       quant_quant
                               RN               5
  145 00000000        6 
                       i       RN               6
  146 00000000        7 
                       j       RN               7
  147 00000000        8 
                       k       RN               8
  148 00000000        9 
                       temp    RN               9
  149 00000000        A 
                       elements
                               RN               10
  150 00000000        C 
                       temp_2  RN               12
  151 00000000         
  152 00000000        B 
                       Most_caloric
                               RN               11
  153 00000000         
  154 00000000         Reset_Handler
                               PROC
  155 00000000                 EXPORT           Reset_Handler             [WEAK
]
  156 00000000 4834            LDR              R0, =Reset_Handler
  157 00000002         
  158 00000002         ; your code here
  159 00000002 4835            LDR              calories,   =INGREDIENT_CALORIE
S 



ARM Macro Assembler    Page 6 


                                                            ; assegnazione punt
                                                            atori
  160 00000004 4935            LDR              quantity,   =INGREDIENT_QUANTIT
Y
  161 00000006 4A36            LDR              calories_rdr, =CALORIES_ORDERED
  162 00000008 4B36            LDR              cal_quant,  =CAL_QUANT
  163 0000000A 4C37            LDR              quantity_rdr,  =QUANTITY_ORDERE
D
  164 0000000C 4D37            LDR              quant_quant, =QUANT_QUANT
  165 0000000E F8DF A0E0       LDR              elements,  =NUM_INGREDIENTS
  166 00000012 F8DA A000       LDR              elements,  [elements] ; molto i
                                                            mportante, ricordar
                                                            si di estrarre
  167 00000016         ; il valore dall'indirizzo!
  168 00000016         
  169 00000016 F04F 0600       MOV              i, #0
  170 0000001A F04F 0700       MOV              j, #0
  171 0000001E         
  172 0000001E         LOAD_LOOP
  173 0000001E 46B8            MOV              k, j
  174 00000020         
  175 00000020 F850 9028       LDR              temp, [calories, k, LSL #2]
  176 00000024 F842 9026       STR              temp, [calories_rdr, i, LSL #2]
 
                                                            ; calories_rdr[i] =
                                                             calories[j]
  177 00000028         
  178 00000028 F851 9028       LDR              temp, [quantity, k, LSL #2]
  179 0000002C F844 9026       STR              temp, [quantity_rdr, i, LSL #2]
 
                                                            ; quantity_rdr[i] =
                                                             quatity[j]
  180 00000030         
  181 00000030 F108 0801       ADD              k, k, #1
  182 00000034         
  183 00000034 F850 9028       LDR              temp, [calories, k, LSL #2]
  184 00000038 F843 9026       STR              temp, [cal_quant, i, LSL #2] ; 
                                                            cal_quant[i] = calo
                                                            ries[j + 1]
  185 0000003C         
  186 0000003C F851 9028       LDR              temp, [quantity, k, LSL #2]
  187 00000040 F845 9026       STR              temp, [quant_quant, i, LSL #2] 
                                                            ; quant_quant[i] = 
                                                            quantity[j + 1]
  188 00000044         
  189 00000044 F106 0601       ADD              i, i, #1
  190 00000048 F107 0702       ADD              j, j, #2
  191 0000004C         
  192 0000004C         
  193 0000004C 4556            CMP              i, elements
  194 0000004E D1E6            BNE              LOAD_LOOP
  195 00000050         ; arrivato qui ho i 4 vettori da ordinare
  196 00000050         
  197 00000050 4650            MOV              R0, elements ; uso R0 come vett
                                                            ore di appoggio
  198 00000052 F100 30FF       ADD              R0, R0, #-1
  199 00000056 F04F 0600       MOV              i, #0
  200 0000005A         EX_LOOP
  201 0000005A F04F 0700       MOV              j, #0



ARM Macro Assembler    Page 7 


  202 0000005E         IN_LOOP
  203 0000005E 46B8            MOV              k, j
  204 00000060 F108 0801       ADD              k, k, #1    ; k = j + 1
  205 00000064         
  206 00000064 F853 9027       LDR              temp,  [cal_quant, j, LSL #2]
  207 00000068 F853 C028       LDR              temp_2, [cal_quant, k, LSL #2]
  208 0000006C 45E1            CMP              temp, temp_2
  209 0000006E DC0B            BGT              NO_SWAP_C   ; if (cal_quant[j] 
                                                            < cal_quant[j + 1])
                                                             SWAP
  210 00000070         
  211 00000070 F843 C027       STR              temp_2, [cal_quant, j, LSL #2] 
                                                            ; cal_quant[j] = ca
                                                            l_quant[j + 1];
  212 00000074 F843 9028       STR              temp,  [cal_quant, k, LSL #2] ;
                                                             cal_quant[j + 1] =
                                                             temp;
  213 00000078         
  214 00000078 F852 9027       LDR              temp,  [calories_rdr, j, LSL #2
]
  215 0000007C F852 C028       LDR              temp_2, [calories_rdr, k, LSL #
2]
  216 00000080 F842 C027       STR              temp_2, [calories_rdr, j, LSL #
2] 
                                                            ; calories_rdr[j] =
                                                             calories_rdr[j + 1
                                                            ];  
  217 00000084 F842 9028       STR              temp,  [calories_rdr, k, LSL #2
] 
                                                            ; calories_rdr[j + 
                                                            1] = temp
  218 00000088         NO_SWAP_C
  219 00000088 F855 9027       LDR              temp,  [quant_quant, j, LSL #2]
  220 0000008C F855 C028       LDR              temp_2, [quant_quant, k, LSL #2
]
  221 00000090 45E1            CMP              temp, temp_2
  222 00000092 DC0B            BGT              NO_SWAP_Q   ; if (quant_quant[j
                                                            ] < quant_quant[j +
                                                             1]) SWAP
  223 00000094         
  224 00000094 F845 C027       STR              temp_2, [quant_quant, j, LSL #2
] 
                                                            ; quant_quant[j] = 
                                                            quant_quant[j + 1];
                                                            
  225 00000098 F845 9028       STR              temp,  [quant_quant, k, LSL #2]
 
                                                            ; quant_quant[j + 1
                                                            ] = temp;
  226 0000009C         
  227 0000009C F854 9027       LDR              temp,  [quantity_rdr, j, LSL #2
]
  228 000000A0 F854 C028       LDR              temp_2, [quantity_rdr, k, LSL #
2]
  229 000000A4 F844 C027       STR              temp_2, [quantity_rdr, j, LSL #
2] 
                                                            ; quantity_rdr[j] =
                                                             quantity_rdr[j + 1
                                                            ];  



ARM Macro Assembler    Page 8 


  230 000000A8 F844 9028       STR              temp,  [quantity_rdr, k, LSL #2
] 
                                                            ; quantity_rdr[j + 
                                                            1] = temp
  231 000000AC         
  232 000000AC         NO_SWAP_Q
  233 000000AC F107 0701       ADD              j, j, #1
  234 000000B0 4287            CMP              j, R0
  235 000000B2 D1D4            BNE              IN_LOOP     ; controlli ciclo i
                                                            nterno
  236 000000B4         
  237 000000B4 F106 0601       ADD              i, i, #1    ; controlli ciclo e
                                                            sterno
  238 000000B8 4556            CMP              i, elements
  239 000000BA D1CE            BNE              EX_LOOP
  240 000000BC         
  241 000000BC         
  242 000000BC         
  243 000000BC         
  244 000000BC         
  245 000000BC         
  246 000000BC         
  247 000000BC         
  248 000000BC         
  249 000000BC         
  250 000000BC         ; STR  j, [Calories_rdr]
  251 000000BC         
  252 000000BC E7FE            B                .
  253 000000BE         
  254 000000BE                 ENDP
  255 000000BE         
  256 000000BE         
  257 000000BE         
  258 000000BE         
  259 000000BE         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  260 000000BE         
  261 000000BE         NMI_Handler
                               PROC
  262 000000BE                 EXPORT           NMI_Handler               [WEAK
]
  263 000000BE E7FE            B                .
  264 000000C0                 ENDP
  266 000000C0         HardFault_Handler
                               PROC
  267 000000C0                 EXPORT           HardFault_Handler         [WEAK
]
  268 000000C0 E7FE            B                .
  269 000000C2                 ENDP
  271 000000C2         MemManage_Handler
                               PROC
  272 000000C2                 EXPORT           MemManage_Handler         [WEAK
]
  273 000000C2 E7FE            B                .
  274 000000C4                 ENDP
  276 000000C4         BusFault_Handler
                               PROC
  277 000000C4                 EXPORT           BusFault_Handler          [WEAK
]



ARM Macro Assembler    Page 9 


  278 000000C4 E7FE            B                .
  279 000000C6                 ENDP
  281 000000C6         UsageFault_Handler
                               PROC
  282 000000C6                 EXPORT           UsageFault_Handler        [WEAK
]
  283 000000C6 E7FE            B                .
  284 000000C8                 ENDP
  285 000000C8         SVC_Handler
                               PROC
  286 000000C8                 EXPORT           SVC_Handler               [WEAK
]
  287 000000C8 E7FE            B                .
  288 000000CA                 ENDP
  290 000000CA         DebugMon_Handler
                               PROC
  291 000000CA                 EXPORT           DebugMon_Handler          [WEAK
]
  292 000000CA E7FE            B                .
  293 000000CC                 ENDP
  294 000000CC         PendSV_Handler
                               PROC
  295 000000CC                 EXPORT           PendSV_Handler            [WEAK
]
  296 000000CC E7FE            B                .
  297 000000CE                 ENDP
  298 000000CE         SysTick_Handler
                               PROC
  299 000000CE                 EXPORT           SysTick_Handler           [WEAK
]
  300 000000CE E7FE            B                .
  301 000000D0                 ENDP
  302 000000D0         
  303 000000D0         Default_Handler
                               PROC
  304 000000D0         
  305 000000D0                 EXPORT           WDT_IRQHandler            [WEAK
]
  306 000000D0                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  307 000000D0                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  308 000000D0                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  309 000000D0                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  310 000000D0                 EXPORT           UART0_IRQHandler          [WEAK
]
  311 000000D0                 EXPORT           UART1_IRQHandler          [WEAK
]
  312 000000D0                 EXPORT           UART2_IRQHandler          [WEAK
]
  313 000000D0                 EXPORT           UART3_IRQHandler          [WEAK
]
  314 000000D0                 EXPORT           PWM1_IRQHandler           [WEAK
]
  315 000000D0                 EXPORT           I2C0_IRQHandler           [WEAK
]
  316 000000D0                 EXPORT           I2C1_IRQHandler           [WEAK



ARM Macro Assembler    Page 10 


]
  317 000000D0                 EXPORT           I2C2_IRQHandler           [WEAK
]
  318 000000D0                 EXPORT           SPI_IRQHandler            [WEAK
]
  319 000000D0                 EXPORT           SSP0_IRQHandler           [WEAK
]
  320 000000D0                 EXPORT           SSP1_IRQHandler           [WEAK
]
  321 000000D0                 EXPORT           PLL0_IRQHandler           [WEAK
]
  322 000000D0                 EXPORT           RTC_IRQHandler            [WEAK
]
  323 000000D0                 EXPORT           EINT0_IRQHandler          [WEAK
]
  324 000000D0                 EXPORT           EINT1_IRQHandler          [WEAK
]
  325 000000D0                 EXPORT           EINT2_IRQHandler          [WEAK
]
  326 000000D0                 EXPORT           EINT3_IRQHandler          [WEAK
]
  327 000000D0                 EXPORT           ADC_IRQHandler            [WEAK
]
  328 000000D0                 EXPORT           BOD_IRQHandler            [WEAK
]
  329 000000D0                 EXPORT           USB_IRQHandler            [WEAK
]
  330 000000D0                 EXPORT           CAN_IRQHandler            [WEAK
]
  331 000000D0                 EXPORT           DMA_IRQHandler            [WEAK
]
  332 000000D0                 EXPORT           I2S_IRQHandler            [WEAK
]
  333 000000D0                 EXPORT           ENET_IRQHandler           [WEAK
]
  334 000000D0                 EXPORT           RIT_IRQHandler            [WEAK
]
  335 000000D0                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  336 000000D0                 EXPORT           QEI_IRQHandler            [WEAK
]
  337 000000D0                 EXPORT           PLL1_IRQHandler           [WEAK
]
  338 000000D0                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  339 000000D0                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  340 000000D0         
  341 000000D0         WDT_IRQHandler
  342 000000D0         TIMER0_IRQHandler
  343 000000D0         TIMER1_IRQHandler
  344 000000D0         TIMER2_IRQHandler
  345 000000D0         TIMER3_IRQHandler
  346 000000D0         UART0_IRQHandler
  347 000000D0         UART1_IRQHandler
  348 000000D0         UART2_IRQHandler
  349 000000D0         UART3_IRQHandler
  350 000000D0         PWM1_IRQHandler
  351 000000D0         I2C0_IRQHandler



ARM Macro Assembler    Page 11 


  352 000000D0         I2C1_IRQHandler
  353 000000D0         I2C2_IRQHandler
  354 000000D0         SPI_IRQHandler
  355 000000D0         SSP0_IRQHandler
  356 000000D0         SSP1_IRQHandler
  357 000000D0         PLL0_IRQHandler
  358 000000D0         RTC_IRQHandler
  359 000000D0         EINT0_IRQHandler
  360 000000D0         EINT1_IRQHandler
  361 000000D0         EINT2_IRQHandler
  362 000000D0         EINT3_IRQHandler
  363 000000D0         ADC_IRQHandler
  364 000000D0         BOD_IRQHandler
  365 000000D0         USB_IRQHandler
  366 000000D0         CAN_IRQHandler
  367 000000D0         DMA_IRQHandler
  368 000000D0         I2S_IRQHandler
  369 000000D0         ENET_IRQHandler
  370 000000D0         RIT_IRQHandler
  371 000000D0         MCPWM_IRQHandler
  372 000000D0         QEI_IRQHandler
  373 000000D0         PLL1_IRQHandler
  374 000000D0         USBActivity_IRQHandler
  375 000000D0         CANActivity_IRQHandler
  376 000000D0         
  377 000000D0 E7FE            B                .
  378 000000D2         
  379 000000D2                 ENDP
  380 000000D2         
  381 000000D2         
  382 000000D2 00 00           ALIGN
  383 000000D4         
  384 000000D4         
  385 000000D4         ; User Initial Stack & Heap
  386 000000D4         
  387 000000D4                 EXPORT           __initial_sp
  388 000000D4                 EXPORT           __heap_base
  389 000000D4                 EXPORT           __heap_limit
  390 000000D4         
  391 000000D4                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\startup.d -o.\startup.o -I.\RTE\_Target_1 -I"C:\Users\Filippo Ma
rtino\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include" -I"C:\Users\F
ilippo Martino\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Include" -
-predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine
="_RTE_ SETA 1" --predefine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --li
st=.\startup.lst startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup.s
   Uses
      At line 59 in file startup.s
      At line 387 in file startup.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup.s
   Uses
      At line 388 in file startup.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file startup.s
   Uses
      At line 389 in file startup.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file startup.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file startup.s
   Uses
      At line 57 in file startup.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file startup.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file startup.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

INGREDIENT_CALORIES 00000000

Symbol: INGREDIENT_CALORIES
   Definitions
      At line 121 in file startup.s
   Uses
      At line 159 in file startup.s
Comment: INGREDIENT_CALORIES used once
INGREDIENT_QUANTITY 00000030

Symbol: INGREDIENT_QUANTITY
   Definitions
      At line 123 in file startup.s
   Uses
      At line 160 in file startup.s
Comment: INGREDIENT_QUANTITY used once
MyRODataArea 00000000

Symbol: MyRODataArea
   Definitions
      At line 119 in file startup.s
   Uses
      None
Comment: MyRODataArea unused
NUM_INGREDIENTS 00000060

Symbol: NUM_INGREDIENTS
   Definitions
      At line 125 in file startup.s
   Uses
      At line 165 in file startup.s
Comment: NUM_INGREDIENTS used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CALORIES_ORDERED 00000000

Symbol: CALORIES_ORDERED
   Definitions
      At line 128 in file startup.s
   Uses
      At line 161 in file startup.s
Comment: CALORIES_ORDERED used once
CAL_QUANT 00000018

Symbol: CAL_QUANT
   Definitions
      At line 129 in file startup.s
   Uses
      At line 162 in file startup.s
Comment: CAL_QUANT used once
MyRWDataArea 00000000

Symbol: MyRWDataArea
   Definitions
      At line 127 in file startup.s
   Uses
      None
Comment: MyRWDataArea unused
QUANTITY_ORDERED 00000030

Symbol: QUANTITY_ORDERED
   Definitions
      At line 131 in file startup.s
   Uses
      At line 163 in file startup.s
Comment: QUANTITY_ORDERED used once
QUANT_QUANT 00000048

Symbol: QUANT_QUANT
   Definitions
      At line 132 in file startup.s
   Uses
      At line 164 in file startup.s
Comment: QUANT_QUANT used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 134 in file startup.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 000000D0

Symbol: ADC_IRQHandler
   Definitions
      At line 363 in file startup.s
   Uses
      At line 99 in file startup.s
      At line 327 in file startup.s

BOD_IRQHandler 000000D0

Symbol: BOD_IRQHandler
   Definitions
      At line 364 in file startup.s
   Uses
      At line 100 in file startup.s
      At line 328 in file startup.s

BusFault_Handler 000000C4

Symbol: BusFault_Handler
   Definitions
      At line 276 in file startup.s
   Uses
      At line 64 in file startup.s
      At line 277 in file startup.s

CANActivity_IRQHandler 000000D0

Symbol: CANActivity_IRQHandler
   Definitions
      At line 375 in file startup.s
   Uses
      At line 111 in file startup.s
      At line 339 in file startup.s

CAN_IRQHandler 000000D0

Symbol: CAN_IRQHandler
   Definitions
      At line 366 in file startup.s
   Uses
      At line 102 in file startup.s
      At line 330 in file startup.s

DMA_IRQHandler 000000D0

Symbol: DMA_IRQHandler
   Definitions
      At line 367 in file startup.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file startup.s
      At line 331 in file startup.s

DebugMon_Handler 000000CA

Symbol: DebugMon_Handler
   Definitions
      At line 290 in file startup.s
   Uses
      At line 71 in file startup.s
      At line 291 in file startup.s

Default_Handler 000000D0

Symbol: Default_Handler
   Definitions
      At line 303 in file startup.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 000000D0

Symbol: EINT0_IRQHandler
   Definitions
      At line 359 in file startup.s
   Uses
      At line 95 in file startup.s
      At line 323 in file startup.s

EINT1_IRQHandler 000000D0

Symbol: EINT1_IRQHandler
   Definitions
      At line 360 in file startup.s
   Uses
      At line 96 in file startup.s
      At line 324 in file startup.s

EINT2_IRQHandler 000000D0

Symbol: EINT2_IRQHandler
   Definitions
      At line 361 in file startup.s
   Uses
      At line 97 in file startup.s
      At line 325 in file startup.s

EINT3_IRQHandler 000000D0

Symbol: EINT3_IRQHandler
   Definitions
      At line 362 in file startup.s
   Uses
      At line 98 in file startup.s
      At line 326 in file startup.s

ENET_IRQHandler 000000D0

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 369 in file startup.s
   Uses
      At line 105 in file startup.s
      At line 333 in file startup.s

EX_LOOP 0000005A

Symbol: EX_LOOP
   Definitions
      At line 200 in file startup.s
   Uses
      At line 239 in file startup.s
Comment: EX_LOOP used once
HardFault_Handler 000000C0

Symbol: HardFault_Handler
   Definitions
      At line 266 in file startup.s
   Uses
      At line 62 in file startup.s
      At line 267 in file startup.s

I2C0_IRQHandler 000000D0

Symbol: I2C0_IRQHandler
   Definitions
      At line 351 in file startup.s
   Uses
      At line 87 in file startup.s
      At line 315 in file startup.s

I2C1_IRQHandler 000000D0

Symbol: I2C1_IRQHandler
   Definitions
      At line 352 in file startup.s
   Uses
      At line 88 in file startup.s
      At line 316 in file startup.s

I2C2_IRQHandler 000000D0

Symbol: I2C2_IRQHandler
   Definitions
      At line 353 in file startup.s
   Uses
      At line 89 in file startup.s
      At line 317 in file startup.s

I2S_IRQHandler 000000D0

Symbol: I2S_IRQHandler
   Definitions
      At line 368 in file startup.s
   Uses
      At line 104 in file startup.s
      At line 332 in file startup.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

IN_LOOP 0000005E

Symbol: IN_LOOP
   Definitions
      At line 202 in file startup.s
   Uses
      At line 235 in file startup.s
Comment: IN_LOOP used once
LOAD_LOOP 0000001E

Symbol: LOAD_LOOP
   Definitions
      At line 172 in file startup.s
   Uses
      At line 194 in file startup.s
Comment: LOAD_LOOP used once
MCPWM_IRQHandler 000000D0

Symbol: MCPWM_IRQHandler
   Definitions
      At line 371 in file startup.s
   Uses
      At line 107 in file startup.s
      At line 335 in file startup.s

MemManage_Handler 000000C2

Symbol: MemManage_Handler
   Definitions
      At line 271 in file startup.s
   Uses
      At line 63 in file startup.s
      At line 272 in file startup.s

NMI_Handler 000000BE

Symbol: NMI_Handler
   Definitions
      At line 261 in file startup.s
   Uses
      At line 61 in file startup.s
      At line 262 in file startup.s

NO_SWAP_C 00000088

Symbol: NO_SWAP_C
   Definitions
      At line 218 in file startup.s
   Uses
      At line 209 in file startup.s
Comment: NO_SWAP_C used once
NO_SWAP_Q 000000AC

Symbol: NO_SWAP_Q
   Definitions
      At line 232 in file startup.s
   Uses
      At line 222 in file startup.s
Comment: NO_SWAP_Q used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

PLL0_IRQHandler 000000D0

Symbol: PLL0_IRQHandler
   Definitions
      At line 357 in file startup.s
   Uses
      At line 93 in file startup.s
      At line 321 in file startup.s

PLL1_IRQHandler 000000D0

Symbol: PLL1_IRQHandler
   Definitions
      At line 373 in file startup.s
   Uses
      At line 109 in file startup.s
      At line 337 in file startup.s

PWM1_IRQHandler 000000D0

Symbol: PWM1_IRQHandler
   Definitions
      At line 350 in file startup.s
   Uses
      At line 86 in file startup.s
      At line 314 in file startup.s

PendSV_Handler 000000CC

Symbol: PendSV_Handler
   Definitions
      At line 294 in file startup.s
   Uses
      At line 73 in file startup.s
      At line 295 in file startup.s

QEI_IRQHandler 000000D0

Symbol: QEI_IRQHandler
   Definitions
      At line 372 in file startup.s
   Uses
      At line 108 in file startup.s
      At line 336 in file startup.s

RIT_IRQHandler 000000D0

Symbol: RIT_IRQHandler
   Definitions
      At line 370 in file startup.s
   Uses
      At line 106 in file startup.s
      At line 334 in file startup.s

RTC_IRQHandler 000000D0

Symbol: RTC_IRQHandler
   Definitions
      At line 358 in file startup.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 94 in file startup.s
      At line 322 in file startup.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 154 in file startup.s
   Uses
      At line 60 in file startup.s
      At line 155 in file startup.s
      At line 156 in file startup.s

SPI_IRQHandler 000000D0

Symbol: SPI_IRQHandler
   Definitions
      At line 354 in file startup.s
   Uses
      At line 90 in file startup.s
      At line 318 in file startup.s

SSP0_IRQHandler 000000D0

Symbol: SSP0_IRQHandler
   Definitions
      At line 355 in file startup.s
   Uses
      At line 91 in file startup.s
      At line 319 in file startup.s

SSP1_IRQHandler 000000D0

Symbol: SSP1_IRQHandler
   Definitions
      At line 356 in file startup.s
   Uses
      At line 92 in file startup.s
      At line 320 in file startup.s

SVC_Handler 000000C8

Symbol: SVC_Handler
   Definitions
      At line 285 in file startup.s
   Uses
      At line 70 in file startup.s
      At line 286 in file startup.s

SysTick_Handler 000000CE

Symbol: SysTick_Handler
   Definitions
      At line 298 in file startup.s
   Uses
      At line 74 in file startup.s
      At line 299 in file startup.s




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

TIMER0_IRQHandler 000000D0

Symbol: TIMER0_IRQHandler
   Definitions
      At line 342 in file startup.s
   Uses
      At line 78 in file startup.s
      At line 306 in file startup.s

TIMER1_IRQHandler 000000D0

Symbol: TIMER1_IRQHandler
   Definitions
      At line 343 in file startup.s
   Uses
      At line 79 in file startup.s
      At line 307 in file startup.s

TIMER2_IRQHandler 000000D0

Symbol: TIMER2_IRQHandler
   Definitions
      At line 344 in file startup.s
   Uses
      At line 80 in file startup.s
      At line 308 in file startup.s

TIMER3_IRQHandler 000000D0

Symbol: TIMER3_IRQHandler
   Definitions
      At line 345 in file startup.s
   Uses
      At line 81 in file startup.s
      At line 309 in file startup.s

UART0_IRQHandler 000000D0

Symbol: UART0_IRQHandler
   Definitions
      At line 346 in file startup.s
   Uses
      At line 82 in file startup.s
      At line 310 in file startup.s

UART1_IRQHandler 000000D0

Symbol: UART1_IRQHandler
   Definitions
      At line 347 in file startup.s
   Uses
      At line 83 in file startup.s
      At line 311 in file startup.s

UART2_IRQHandler 000000D0

Symbol: UART2_IRQHandler
   Definitions
      At line 348 in file startup.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 84 in file startup.s
      At line 312 in file startup.s

UART3_IRQHandler 000000D0

Symbol: UART3_IRQHandler
   Definitions
      At line 349 in file startup.s
   Uses
      At line 85 in file startup.s
      At line 313 in file startup.s

USBActivity_IRQHandler 000000D0

Symbol: USBActivity_IRQHandler
   Definitions
      At line 374 in file startup.s
   Uses
      At line 110 in file startup.s
      At line 338 in file startup.s

USB_IRQHandler 000000D0

Symbol: USB_IRQHandler
   Definitions
      At line 365 in file startup.s
   Uses
      At line 101 in file startup.s
      At line 329 in file startup.s

UsageFault_Handler 000000C6

Symbol: UsageFault_Handler
   Definitions
      At line 281 in file startup.s
   Uses
      At line 65 in file startup.s
      At line 282 in file startup.s

WDT_IRQHandler 000000D0

Symbol: WDT_IRQHandler
   Definitions
      At line 341 in file startup.s
   Uses
      At line 77 in file startup.s
      At line 305 in file startup.s

52 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file startup.s
   Uses
      At line 46 in file startup.s
Comment: Heap_Size used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup.s
   Uses
      At line 34 in file startup.s
Comment: Stack_Size used once
2 symbols
425 symbols in table
