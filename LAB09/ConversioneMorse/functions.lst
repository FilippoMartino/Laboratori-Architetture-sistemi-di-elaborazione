


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             MorseData, DATA, READONLY
    2 00000000         
    3 00000000 FFFFFF01 
              FFFF1000 
              FFFF1010 
              FFFFF100 
              FFFFFFF0 
              FFFF0010 MORSE   DCD              0xFFFFFF01, 0xFFFF1000, 0xFFFF1
010, 0xFFFFF100, 0xFFFFFFF0, 0xFFFF0010
    4 00000018 FFFFF110 
              FFFF0000 
              FFFFFF00 
              FFFF0111 
              FFFFF101 
              FFFF0100         DCD              0xFFFFF110, 0xFFFF0000, 0xFFFFF
F00, 0xFFFF0111, 0xFFFFF101, 0xFFFF0100
    5 00000030 FFFFFF11 
              FFFFFF10 
              FFFFF111 
              FFFF0110 
              FFFF1101 
              FFFFF010         DCD              0xFFFFFF11, 0xFFFFFF10, 0xFFFFF
111, 0xFFFF0110, 0xFFFF1101, 0xFFFFF010
    6 00000048 FFFFF000 
              FFFFFFF1 
              FFFFF001 
              FFFF0001 
              FFFFF011 
              FFFF1001         DCD              0xFFFFF000, 0xFFFFFFF1, 0xFFFFF
001, 0xFFFF0001, 0xFFFFF011, 0xFFFF1001
    7 00000060 FFFF1011 
              FFFF1100 
              FFF01111 
              FFF00111 
              FFF00011 
              FFF00001         DCD              0xFFFF1011, 0xFFFF1100, 0xFFF01
111, 0xFFF00111, 0xFFF00011, 0xFFF00001
    8 00000078 FFF00000 
              FFF10000 
              FFF11000 
              FFF11100 
              FFF11110 
              FFF11111         DCD              0xFFF00000, 0xFFF10000, 0xFFF11
000, 0xFFF11100, 0xFFF11110, 0xFFF11111
    9 00000090         
   10 00000090 41 42 43 
              44 45 46 CONVERSION
                               DCB              "A", "B", "C", "D", "E", "F"
   11 00000096 47 48 49 
              4A 4B 4C         DCB              "G", "H", "I", "J", "K", "L"
   12 0000009C 4D 4E 4F 
              50 51 52         DCB              "M", "N", "O", "P", "Q", "R"
   13 000000A2 53 54 55 
              56 57 58         DCB              "S", "T", "U", "V", "W", "X"
   14 000000A8 59 5A 31 
              32 33 34         DCB              "Y", "Z", "1", "2", "3", "4"
   15 000000AE 35 36 37 
              38 39 30         DCB              "5", "6", "7", "8", "9", "0"
   16 000000B4         



ARM Macro Assembler    Page 2 


   17 000000B4                 AREA             myCode, CODE, READONLY
   18 00000000         
   19 00000000         translate_morse
                               PROC
   20 00000000                 EXPORT           translate_morse
   21 00000000         
   22 00000000 46EC            MOV              R12, SP     ; salvo il valore d
                                                            ello SP per poter r
                                                            ecuperare gli altri
                                                             argomenti
   23 00000002 E92D 4DF0       PUSH             {R4-R8, R10-R11, LR} 
                                                            ; save registers
   24 00000006         
   25 00000006         ; R0 -> *vett_input
   26 00000006         ; R1 -> vett_input_size
   27 00000006         ; R2 -> *vett_output
   28 00000006         ; R3 -> vett_output_size
   29 00000006         ; R11 -> output_counter
   30 00000006         
   31 00000006 F89C 4000       LDRB             R4, [R12]
   32 0000000A F89C 5004       LDRB             R5, [R12, #4]
   33 0000000E F89C 6008       LDRB             R6, [R12, #8] ; recupero parame
                                                            tri
   34 00000012         
   35 00000012         ; R4 -> change_symbol
   36 00000012         ; R5 -> space
   37 00000012         ; R6 -> sentence_end
   38 00000012         
   39 00000012         ; R7 -> counter
   40 00000012         
   41 00000012 F04F 0700       MOV              R7, #0
   42 00000016         
   43 00000016         ; R8 -> mask
   44 00000016         
   45 00000016 F04F 38FF 
                       LOOP    MOV              R8, #0xFFFFFFFF
   46 0000001A         
   47 0000001A         ; R9 -> input
   48 0000001A         
   49 0000001A F810 9007 
                       READ    LDRB             R9, [R0, R7] ; carico valore mo
                                                            rse (bit)
   50 0000001E F107 0701       ADD              R7, R7, #1
   51 00000022 428F            CMP              R7, R1
   52 00000024 D01A            BEQ              END_TM
   53 00000026 F1B9 0F30       CMP              R9, #'0'    ; inizio i confront
                                                            i
   54 0000002A D007            BEQ              is_zero
   55 0000002C F1B9 0F31       CMP              R9, #'1'
   56 00000030 D009            BEQ              is_one
   57 00000032 F7FF FFFE       BL               convert     ; nel caso debba co
                                                            nvertire chiamo la 
                                                            procedura
   58 00000036 45B1            CMP              R9, R6
   59 00000038 D010            BEQ              END_TM
   60 0000003A E7EC            B                LOOP        ; ritorno dalla pro
                                                            cedura
   61 0000003C         
   62 0000003C EA4F 1808 



ARM Macro Assembler    Page 3 


                       is_zero LSL              R8, #4      ; sposta a sinistra
                                                             di una posizione l
                                                            a maschera (4 byte 
                                                            in hex)
   63 00000040 F088 0800       EOR              R8, #0      ; OR con 0 per esse
                                                            re sicuri che ultim
                                                            a cifra scritta sia
                                                             uno zero
   64 00000044 E7E9            B                READ
   65 00000046         
   66 00000046 EA4F 1808 
                       is_one  LSL              R8, #4
   67 0000004A F088 0801       EOR              R8, #1      ; shift come prima 
                                                            e OR per essere sic
                                                            uri di aver uno com
                                                            e ultima cifra
   68 0000004E E7E4            B                READ
   69 00000050         
   70 00000050         is_space
   71 00000050         
   72 00000050 EA4F 0888       LSL              R8, #2
   73 00000054 F107 0701       ADD              R7, R7, #1
   74 00000058 2F04            CMP              R7, #4
   75 0000005A D1DC            BNE              LOOP
   76 0000005C         
   77 0000005C         
   78 0000005C         
   79 0000005C 4658    END_TM  MOV              R0, R11
   80 0000005E E8BD 8DF0       POP              {R4-R8, R10-R11, PC} 
                                                            ; restore registers
                                                            
   81 00000062 F04F 0102       MOV              R1, #2
   82 00000066                 ENDP
   83 00000066         
   84 00000066         convert PROC
   85 00000066 E92D 57FF       PUSH             {R0-R10, R12, LR}
   86 0000006A 480E            LDR              R0, =MORSE
   87 0000006C 490E            LDR              R1, =CONVERSION ; puntatori all
                                                            e tabelle per conve
                                                            rsione
   88 0000006E F04F 33FF       MOV              R3, #-1     ; counter
   89 00000072         
   90 00000072 E002            B                load_morse  ; salvo parola
   91 00000074         
   92 00000074 45A9    check_space
                               CMP              R9, R5
   93 00000076 D00C            BEQ              load_space
   94 00000078 E012            B                END_CONV
   95 0000007A         
   96 0000007A F103 0301 
                       load_morse
                               ADD              R3, R3, #1
   97 0000007E F850 4023       LDR              R4, [R0, R3, LSL #2] ; scorro i
                                                             valori della tabel
                                                            la morse e carico i
                                                            n R4
   98 00000082 4544            CMP              R4, R8      ; confronto con la 
                                                            maschera
   99 00000084 D1F9            BNE              load_morse



ARM Macro Assembler    Page 4 


  100 00000086 5CCE            LDRB             R6, [R1, R3] ; carico il valore
                                                             corrispondente all
                                                            'indirizzo nella ta
                                                            b di conv
  101 00000088 F802 600B       STRB             R6, [R2, R11]
  102 0000008C F10B 0B01       ADD              R11, R11, #1 ; carico il valore
                                                             nel vettore di out
                                                            put ed incremento c
                                                            ontatore
  103 00000090 E7F0            B                check_space
  104 00000092         
  105 00000092 F04F 0320 
                       load_space
                               MOV              R3, #' '
  106 00000096 F802 300B       STRB             R3, [R2, R11]
  107 0000009A F10B 0B01       ADD              R11, R11, #1
  108 0000009E E7FF            B                END_CONV
  109 000000A0         
  110 000000A0 E8BD 97FF 
                       END_CONV
                               POP              {R0-R10, R12, PC}
  111 000000A4                 ENDP
  112 000000A4         
  113 000000A4                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\functions.d -o.\functions.o -I.\RTE\_Target_1 -I"C:\Users\Filipp
o Martino\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include" -I"C:\Use
rs\Filippo Martino\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Includ
e" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --prede
fine="_RTE_ SETA 1" --predefine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" 
--list=.\functions.lst functions.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONVERSION 00000090

Symbol: CONVERSION
   Definitions
      At line 10 in file functions.s
   Uses
      At line 87 in file functions.s
Comment: CONVERSION used once
MORSE 00000000

Symbol: MORSE
   Definitions
      At line 3 in file functions.s
   Uses
      At line 86 in file functions.s
Comment: MORSE used once
MorseData 00000000

Symbol: MorseData
   Definitions
      At line 1 in file functions.s
   Uses
      None
Comment: MorseData unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

END_CONV 000000A0

Symbol: END_CONV
   Definitions
      At line 110 in file functions.s
   Uses
      At line 94 in file functions.s
      At line 108 in file functions.s

END_TM 0000005C

Symbol: END_TM
   Definitions
      At line 79 in file functions.s
   Uses
      At line 52 in file functions.s
      At line 59 in file functions.s

LOOP 00000016

Symbol: LOOP
   Definitions
      At line 45 in file functions.s
   Uses
      At line 60 in file functions.s
      At line 75 in file functions.s

READ 0000001A

Symbol: READ
   Definitions
      At line 49 in file functions.s
   Uses
      At line 64 in file functions.s
      At line 68 in file functions.s

check_space 00000074

Symbol: check_space
   Definitions
      At line 92 in file functions.s
   Uses
      At line 103 in file functions.s
Comment: check_space used once
convert 00000066

Symbol: convert
   Definitions
      At line 84 in file functions.s
   Uses
      At line 57 in file functions.s
Comment: convert used once
is_one 00000046

Symbol: is_one
   Definitions
      At line 66 in file functions.s
   Uses
      At line 56 in file functions.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: is_one used once
is_space 00000050

Symbol: is_space
   Definitions
      At line 70 in file functions.s
   Uses
      None
Comment: is_space unused
is_zero 0000003C

Symbol: is_zero
   Definitions
      At line 62 in file functions.s
   Uses
      At line 54 in file functions.s
Comment: is_zero used once
load_morse 0000007A

Symbol: load_morse
   Definitions
      At line 96 in file functions.s
   Uses
      At line 90 in file functions.s
      At line 99 in file functions.s

load_space 00000092

Symbol: load_space
   Definitions
      At line 105 in file functions.s
   Uses
      At line 93 in file functions.s
Comment: load_space used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 17 in file functions.s
   Uses
      None
Comment: myCode unused
translate_morse 00000000

Symbol: translate_morse
   Definitions
      At line 19 in file functions.s
   Uses
      At line 20 in file functions.s
Comment: translate_morse used once
13 symbols
352 symbols in table
