


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             MorseData, DATA, READONLY
    2 00000000         
    3 00000000 FFFFFF01 
              FFFF1000 
              FFFF1010 
              FFFFF100 
              FFFFFFF0 
              FFFF0010 MORSE   DCD              0xFFFFFF01, 0xFFFF1000, 0xFFFF1
010, 0xFFFFF100, 0xFFFFFFF0, 0xFFFF0010
    4 00000018 FFFFF110 
              FFFF0000 
              FFFFFF00 
              FFFF0111 
              FFFFF101 
              FFFF0100         DCD              0xFFFFF110, 0xFFFF0000, 0xFFFFF
F00, 0xFFFF0111, 0xFFFFF101, 0xFFFF0100
    5 00000030 FFFFFF11 
              FFFFFF10 
              FFFFF111 
              FFFF0110 
              FFFF1101 
              FFFFF010         DCD              0xFFFFFF11, 0xFFFFFF10, 0xFFFFF
111, 0xFFFF0110, 0xFFFF1101, 0xFFFFF010
    6 00000048 FFFFF000 
              FFFFFFF1 
              FFFFF001 
              FFFF0001 
              FFFFF011 
              FFFF1001         DCD              0xFFFFF000, 0xFFFFFFF1, 0xFFFFF
001, 0xFFFF0001, 0xFFFFF011, 0xFFFF1001
    7 00000060 FFFF1011 
              FFFF1100 
              FFF01111 
              FFF00111 
              FFF00011 
              FFF00001         DCD              0xFFFF1011, 0xFFFF1100, 0xFFF01
111, 0xFFF00111, 0xFFF00011, 0xFFF00001
    8 00000078 FFF00000 
              FFF10000 
              FFF11000 
              FFF11100 
              FFF11110 
              FFF11111         DCD              0xFFF00000, 0xFFF10000, 0xFFF11
000, 0xFFF11100, 0xFFF11110, 0xFFF11111
    9 00000090         
   10 00000090 41 42 43 
              44 45 46 CONVERSION
                               DCB              "A", "B", "C", "D", "E", "F"
   11 00000096 47 48 49 
              4A 4B 4C         DCB              "G", "H", "I", "J", "K", "L"
   12 0000009C 4D 4E 4F 
              50 51 52         DCB              "M", "N", "O", "P", "Q", "R"
   13 000000A2 53 54 55 
              56 57 58         DCB              "S", "T", "U", "V", "W", "X"
   14 000000A8 59 5A 31 
              32 33 34         DCB              "Y", "Z", "1", "2", "3", "4"
   15 000000AE 35 36 37 
              38 39 30         DCB              "5", "6", "7", "8", "9", "0"
   16 000000B4         



ARM Macro Assembler    Page 2 


   17 000000B4                 AREA             myCode, CODE, READONLY
   18 00000000         
   19 00000000         translate_morse
                               PROC
   20 00000000                 EXPORT           translate_morse
   21 00000000         
   22 00000000 E92D 4DF0       PUSH             {R4-R8, R10-R11, LR} 
                                                            ; save registers
   23 00000004         
   24 00000004         ; R0 -> *vett_input
   25 00000004         ; R1 -> vett_input_size
   26 00000004         ; R2 -> *vett_output
   27 00000004         ; R3 -> vett_output_size
   28 00000004         ; R11 -> output_counter
   29 00000004         
   30 00000004 F04F 0B00       MOV              R11, #0
   31 00000008 B008            ADD              SP, SP, #32
   32 0000000A F89D 4000       LDRB             R4, [SP]
   33 0000000E F89D 5004       LDRB             R5, [SP, #4]
   34 00000012 F89D 6008       LDRB             R6, [SP, #8]
   35 00000016 B088            ADD              SP, SP, #-32
   36 00000018         
   37 00000018         ; R4 -> change_symbol
   38 00000018         ; R5 -> space
   39 00000018         ; R6 -> sentence_end
   40 00000018         
   41 00000018         ; R7 -> counter
   42 00000018         
   43 00000018 F04F 0700       MOV              R7, #0
   44 0000001C         
   45 0000001C         ; R8 -> mask
   46 0000001C         
   47 0000001C F04F 38FF 
                       LOOP    MOV              R8, #0xFFFFFFFF
   48 00000020         
   49 00000020         ; R9 -> input
   50 00000020         
   51 00000020 F810 9007 
                       READ    LDRB             R9, [R0, R7] ; carico valore mo
                                                            rse (bit)
   52 00000024 F107 0701       ADD              R7, R7, #1
   53 00000028 428F            CMP              R7, R1
   54 0000002A D01A            BEQ              END_TM
   55 0000002C F1B9 0F30       CMP              R9, #'0'    ; inizio i confront
                                                            i
   56 00000030 D007            BEQ              is_zero
   57 00000032 F1B9 0F31       CMP              R9, #'1'
   58 00000036 D009            BEQ              is_one
   59 00000038 F7FF FFFE       BL               convert     ; nel caso debba co
                                                            nvertire chiamo la 
                                                            procedura
   60 0000003C 45B1            CMP              R9, R6
   61 0000003E D010            BEQ              END_TM
   62 00000040 E7EC            B                LOOP        ; ritorno dalla pro
                                                            cedura
   63 00000042         
   64 00000042 EA4F 1808 
                       is_zero LSL              R8, #4      ; sposta a sinistra
                                                             di una posizione l



ARM Macro Assembler    Page 3 


                                                            a maschera (4 byte 
                                                            in hex)
   65 00000046 F088 0800       EOR              R8, #0      ; OR con 0 per esse
                                                            re sicuri che ultim
                                                            a cifra scritta sia
                                                             uno zero
   66 0000004A E7E9            B                READ
   67 0000004C         
   68 0000004C EA4F 1808 
                       is_one  LSL              R8, #4
   69 00000050 F088 0801       EOR              R8, #1      ; shift come prima 
                                                            e OR per essere sic
                                                            uri di aver uno com
                                                            e ultima cifra
   70 00000054 E7E4            B                READ
   71 00000056         
   72 00000056         is_space
   73 00000056         
   74 00000056 EA4F 0888       LSL              R8, #2
   75 0000005A F107 0701       ADD              R7, R7, #1
   76 0000005E 2F04            CMP              R7, #4
   77 00000060 D1DC            BNE              LOOP
   78 00000062         
   79 00000062         
   80 00000062         
   81 00000062 E8BD 8DF0 
                       END_TM  POP              {R4-R8, R10-R11, PC} 
                                                            ; restore registers
                                                            
   82 00000066 4658            MOV              R0, R11
   83 00000068 F04F 0102       MOV              R1, #2
   84 0000006C                 ENDP
   85 0000006C         
   86 0000006C         convert PROC
   87 0000006C E92D 57FF       PUSH             {R0-R10, R12, LR}
   88 00000070 480E            LDR              R0, =MORSE
   89 00000072 490F            LDR              R1, =CONVERSION ; puntatori all
                                                            e tabelle per conve
                                                            rsione
   90 00000074 F04F 33FF       MOV              R3, #-1     ; counter
   91 00000078         
   92 00000078 E002            B                load_morse  ; salvo parola
   93 0000007A         
   94 0000007A 45A9    check_space
                               CMP              R9, R5
   95 0000007C D00C            BEQ              load_space
   96 0000007E E012            B                END_CONV
   97 00000080         
   98 00000080 F103 0301 
                       load_morse
                               ADD              R3, R3, #1
   99 00000084 F850 4023       LDR              R4, [R0, R3, LSL #2] ; scorro i
                                                             valori della tabel
                                                            la morse e carico i
                                                            n R4
  100 00000088 4544            CMP              R4, R8      ; confronto con la 
                                                            maschera
  101 0000008A D1F9            BNE              load_morse
  102 0000008C 5CCE            LDRB             R6, [R1, R3] ; carico il valore



ARM Macro Assembler    Page 4 


                                                             corrispondente all
                                                            'indirizzo nella ta
                                                            b di conv
  103 0000008E F802 600B       STRB             R6, [R2, R11]
  104 00000092 F10B 0B01       ADD              R11, R11, #1 ; carico il valore
                                                             nel vettore di out
                                                            put ed incremento c
                                                            ontatore
  105 00000096 E7F0            B                check_space
  106 00000098         
  107 00000098 F04F 0320 
                       load_space
                               MOV              R3, #' '
  108 0000009C F802 300B       STRB             R3, [R2, R11]
  109 000000A0 F10B 0B01       ADD              R11, R11, #1
  110 000000A4 E7FF            B                END_CONV
  111 000000A6         
  112 000000A6 E8BD 97FF 
                       END_CONV
                               POP              {R0-R10, R12, PC}
  113 000000AA                 ENDP
  114 000000AA         
  115 000000AA                 END
              00 00 00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\functions.d -o.\functions.o -I.\RTE\_Target_1 -I"C:\Users\Filipp
o Martino\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include" -I"C:\Use
rs\Filippo Martino\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Includ
e" --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --prede
fine="_RTE_ SETA 1" --predefine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" 
--list=.\functions.lst functions.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONVERSION 00000090

Symbol: CONVERSION
   Definitions
      At line 10 in file functions.s
   Uses
      At line 89 in file functions.s
Comment: CONVERSION used once
MORSE 00000000

Symbol: MORSE
   Definitions
      At line 3 in file functions.s
   Uses
      At line 88 in file functions.s
Comment: MORSE used once
MorseData 00000000

Symbol: MorseData
   Definitions
      At line 1 in file functions.s
   Uses
      None
Comment: MorseData unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

END_CONV 000000A6

Symbol: END_CONV
   Definitions
      At line 112 in file functions.s
   Uses
      At line 96 in file functions.s
      At line 110 in file functions.s

END_TM 00000062

Symbol: END_TM
   Definitions
      At line 81 in file functions.s
   Uses
      At line 54 in file functions.s
      At line 61 in file functions.s

LOOP 0000001C

Symbol: LOOP
   Definitions
      At line 47 in file functions.s
   Uses
      At line 62 in file functions.s
      At line 77 in file functions.s

READ 00000020

Symbol: READ
   Definitions
      At line 51 in file functions.s
   Uses
      At line 66 in file functions.s
      At line 70 in file functions.s

check_space 0000007A

Symbol: check_space
   Definitions
      At line 94 in file functions.s
   Uses
      At line 105 in file functions.s
Comment: check_space used once
convert 0000006C

Symbol: convert
   Definitions
      At line 86 in file functions.s
   Uses
      At line 59 in file functions.s
Comment: convert used once
is_one 0000004C

Symbol: is_one
   Definitions
      At line 68 in file functions.s
   Uses
      At line 58 in file functions.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: is_one used once
is_space 00000056

Symbol: is_space
   Definitions
      At line 72 in file functions.s
   Uses
      None
Comment: is_space unused
is_zero 00000042

Symbol: is_zero
   Definitions
      At line 64 in file functions.s
   Uses
      At line 56 in file functions.s
Comment: is_zero used once
load_morse 00000080

Symbol: load_morse
   Definitions
      At line 98 in file functions.s
   Uses
      At line 92 in file functions.s
      At line 101 in file functions.s

load_space 00000098

Symbol: load_space
   Definitions
      At line 107 in file functions.s
   Uses
      At line 95 in file functions.s
Comment: load_space used once
myCode 00000000

Symbol: myCode
   Definitions
      At line 17 in file functions.s
   Uses
      None
Comment: myCode unused
translate_morse 00000000

Symbol: translate_morse
   Definitions
      At line 19 in file functions.s
   Uses
      At line 20 in file functions.s
Comment: translate_morse used once
13 symbols
352 symbols in table
